pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'main',
                        credentialsId: 'git-PAT',
                        url: 'https://github.com/optit-cloud-team/optit-lab-springmvc-example.git'
                }
            }
        }
        stage('Maven Build') {
            steps {
                script {
                    sh "cd recipes && mvn clean install"
                }
            }
        }
        stage('Run') {
            steps {
                sh "cd recipes && mvn spring-boot:run"
            }
        }
        stage('Verify Dockerfile') {
            steps {
                script {
                    // Print working directory and list files to verify Dockerfile presence
                    sh 'pwd && ls -la'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image using Dockerfile in the root of the recipes directory
                    sh "docker build -t your-spring-boot-app -f recipes/Dockerfile recipes"
                }
            }
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    sh "docker tag your-spring-boot-app raorajath/your-spring-boot-app:compose1"
                }
            }
        }
    }
    stage('Docker Publish') {
            steps {
                script {
                    // Docker login using credentials
                    withCredentials([usernamePassword(credentialsId: 'bkdockerid', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
                        
                        def buildId = env.BUILD_ID
                        def imageNameWithTag = "bharathoptdocker/optit-lab-service:$buildId"
                        sh "docker tag optit-lab-service $imageNameWithTag"
                        sh "docker push $imageNameWithTag"

                        def imageNameWithLatest = "bharathoptdocker/optit-lab-service:latest"
                        sh "docker tag optit-lab-service $imageNameWithLatest"
                        sh "docker push $imageNameWithLatest"
                    }
                }
            }
        }
    }
}

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
